#include <stdio.h> int last = -1; void TakeInputForInteger(int* n){ scanf("%d", n); } void Print(int arr[]){ printf("\nArray : "); for(int i = 0; i <= last; i++){ printf("%d ", arr[i]); } } int ValidIndex(int index, int n){ if(index < 0 || index >= n){ return 0; } return 1; } void PrintChoiceMenu(){ printf("\nPress 1 - Insert"); printf("\nPress 2 - Update"); printf("\nPress 3 - Delete"); printf("\nPress 4 - Search"); printf("\nPress 5 - Sort"); printf("\nPress 6 - Print"); printf("\nPress 0 - Exit\n"); } void InsertInArray(int arr[], int size){ int index; printf("\nEnter the Index where want to Insert : "); TakeInputForInteger(&index); if(ValidIndex(index, size) && index <= last+1){ printf("\nEnter the Value you want to Insert : "); int value; TakeInputForInteger(&value); for(int i = (last == size - 1 ? last : last + 1); i >= index + 1; i--){ arr[i] = arr[i - 1]; } arr[index] = value; last = (last == size - 1 ? last : last + 1); } else{ printf("\nInvalid Index, Try Again"); } } void UpdateInArray(int arr[], int size){ int index; printf("\nEnter the Index where want to Update : "); TakeInputForInteger(&index); if(ValidIndex(index, size) && index <= last){ printf("\nEnter the New Value : "); int value; TakeInputForInteger(&value); arr[index] = value; } else{ printf("\nInvalid Index, Try Again"); } } void DeleteInArray(int arr[], int size){ int index; printf("\nEnter the Index which you want to Delete : "); TakeInputForInteger(&index); if(ValidIndex(index, size) && index <= last){ for(int i = index ; i <= last; i++){ arr[i] = arr[i + 1]; } last--; } else{ printf("\nInvalid Index, Try Again"); } } void LinearSearch(int arr[], int target){ for(int i = 0; i <= last; i++){ if(arr[i] == target){ printf("Found on index = %d", i); return; } } printf("Not Found"); } void BinarySearch(int arr[], int target){ int low = 0; int high = last; while(low <= high){ int mid = low + ((high - low) >> 1); if(arr[mid] == target){ printf("Found on index = %d", mid); return; } else if(arr[mid] < target){ low = mid + 1; } else{ high = mid - 1; } } printf("Not Found"); } void SearchInArray(int arr[]){ int target; printf("\nEnter your Target"); TakeInputForInteger(&target); int sorted = 1; for(int i = 1; i <= last; i++){ if(arr[i] < arr[i - 1]){ sorted = 0; } } if(sorted){ BinarySearch(arr, target); } else{ LinearSearch(arr, target); } } void swap(int *a, int *b){ int temp = *a; *a = *b; *b = temp; } void SortInArray(int arr[]){ for(int iteration = 1; iteration <= last + 1; iteration++){ for(int i = 1; i <= last - iteration + 1; i++){ if(arr[i] < arr[i - 1]){ swap(&arr[i], &arr[i - 1]); } } } } int main(){ printf("We will be following ZERO based Indexing: \n"); printf("Enter the size of the Array: "); int n; TakeInputForInteger(&n); if(n <= 0){ return 0; } int arr[n]; int choice = -1; do{ PrintChoiceMenu(); TakeInputForInteger(&choice); switch(choice){ case 0: break; case 1: InsertInArray(arr, n); break; case 2: UpdateInArray(arr, n); break; case 3: DeleteInArray(arr, n); break; case 4: SearchInArray(arr); break; case 5: SortInArray(arr); break; case 6: Print(arr); break; default: printf("\nWrong Choice, Enter valid Choice"); break; } }while(choice != 0); printf("\nBye"); return 0; }